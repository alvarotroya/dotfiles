echo $PATH
export PATH=$PATH:/Users/alvaro/repos/qm/lidar_stuff
echo $PATH
python transform_scale_lidar_frame_to_task_input.py
clear
python
export PATH=$PATH:/Users/alvaro/repos/qm/lidar_stuff
python
clear
clear
python transform_scale_lidar_frame_to_task_input.py
clear
echo $PATH
python 
clear
clear
clear
export PYTHONPATH=/Users/alvaro/repos/qm/lidar_stuff
python
clear
python transform_scale_lidar_frame_to_task_input.py
pwd
clear
rm scale_lidar_frame_example.json
clear
cd ../..
clear
ls
clear
aws s3 cp s3://qm-romanesco-revival/scale_lidar_frame_example.json scripts/romanesco_revival/\

git pull
clear
tmux
npm start
nvim -u /Users/alvaro/.local/share/lunarvim/lvim/init.lua /Users/alvaro/.ideavimrc
pwd
clear
aws s3 cp --help
aws s3 cp s3://qm-romanesco-revival/scale_lidar_frame_example.json .
clear
ls
cd ..
ls
clear
aws s3 cp s3://qm-romanesco-revival/scale_lidar_frame_example.json .
clear
ls
clear
nvim -u /Users/alvaro/.local/share/lunarvim/lvim/init.lua Dockerfile
qm-dev
jupyter Untitled.ipynb
jupyter notebook
clear
http-server -p 5555 --cors
tmux
clear
gs
clear
git co -b at/mongodb_small_refactor
clear
clear
gs
clear
git restore .
gs
clear
git cherry-pick 73d03449a117af1cd722b20fb273151a03ad2441
clear
pytest --help
clear
git fetch
gs
git pull
git log
clear
git pull
git pull --merge
clear
git pull --rebase
pip list | grep 'psycopg'
clear
conda deactivate 
conda create -n test python=python3
conda activate test
conda create -n test python3
clear
conda create -n test python=3.8
clear
conda activate test
clear
pip install psycopg2
clear
qm-dev
clear
clear
pip list | grep 'docker'
pip list | grep 'dotenv'
conda activate test
clear
pip list 
pip install -e pipeline_builder
pip list
pip install -e pipeline_builder
pip list
pip list | grep dotenv
pip remove pipeline_builder
pip uninstall pipeline_builder
pip install -e pipeline_builder
pip list | grep dotenv
pip uninstall pipeline_builder
pip install -e pipeline_builder
pip list | grep dotenv
clear
pip list | grep dvc
clear
qm-dev
DOCKER_BUILDKIT=1 docker buildx build --platform linux/amd64 -t pipeline_development_image -o type=docker -f ./Dockerfile.local .\

cd pipeline_builder
cd docker
DOCKER_BUILDKIT=1 docker buildx build --platform linux/amd64 -t pipeline_development_image_test -o type=docker -f ./Dockerfile.local ../../
clear
DOCKER_BUILDKIT=1 docker buildx build --platform linux/amd64 -t pipeline_development_image_test -o type=docker -f ./Dockerfile.local ../../
clear
DOCKER_BUILDKIT=1 docker buildx build --platform linux/amd64 -t pipeline_development_image_test -o type=docker -f ./Dockerfile.local ../../
clear
docker images
DOCKER_BUILDKIT=1 docker buildx build --platform linux/amd64 -t pipeline_development_image_new -o type=docker -f ./Dockerfile.local ../../
nvim -u /Users/alvaro/.local/share/lunarvim/lvim/init.lua /Users/alvaro/.ideavimrc
gs
clear
gs
clear
git pull
clear
git co at/lidar_transformer 
git co -f at/lidar_transformer 
clear
git pull
clear
tmux
nvim -u /Users/alvaro/.local/share/lunarvim/lvim/init.lua /Users/alvaro/.ideavimrc
nvim -u /Users/alvaro/.local/share/lunarvim/lvim/init.lua Dockerfile
clear
gs
clear
gcm
git pull
git diff qm_mongodb/qm_mongodb/baked_beans/database/mongodb_database.py HEAD^
git diff qm_mongodb/qm_mongodb/baked_beans/database/mongodb_database.py
git diff --cached qm_mongodb/qm_mongodb/baked_beans/database/mongodb_database.py
git diff HEAD^ HEAD -- qm_mongodb/qm_mongodb/baked_beans/database/mongodb_database.py
git diff HEAD^ HEAD -- qm_mongodb/qm_mongodb/baked_beans/database/abstract_database.py
clear
git co -b at/corn2_prepare_fn_pl
clear
aws s3 cp s3://qm-corn2 ~/data/
clear
ls
aws s3 cp s3://qm-corn2 ~/data/ --recursive
clear
clear
clear
tmux
nvim -u /Users/alvaro/.local/share/lunarvim/lvim/init.lua Dockerfile
nvim -u /Users/alvaro/.local/share/lunarvim/lvim/init.lua /Users/alvaro/.ideavimrc
tmux
nvim -u /Users/alvaro/.local/share/lunarvim/lvim/init.lua /Users/alvaro/.ideavimrc
nvim -u /Users/alvaro/.local/share/lunarvim/lvim/init.lua Dockerfile
clear
docker ps -a
docker rm -f 3ba a40
clear
rsp
rps
git worktree remove /Users/alvaro/repos/qm/lidar_stuff 
gs
clear
git worktree remove -f /Users/alvaro/repos/qm/lidar_stuff 
ls
clear
cd ..
ls
ls
cd pr_branch
clear
git co master
git pull
clear
git co at/mongodb_small_refactor 
git merge master
clear
git push
cd docker
cd bbq
clear
cd ../dataset_explorer
ls
clrea
clear
tmux
gs
git push origin refs/tags/bbq/v1.2.6
git tag -d refs/tags/bbq/v1.2.6
git tag -d bbq/v1.2.6
clear
git push --delete origin refs/tags/bbq/v1.2.6
clear
git tag --help
git tag bbq/v1.2.6 
git tag --list
clear
git push origin refs/tags/bbq/v1.2.6
clear
clear
ssh bbq-devtest
clear
gs
clear
gs
git log
clear
git tag -d bbq/v1.2.6
git push --delete origin refs/tags/bbq/v1.2.6
git tag bbq/v1.2.6 
git push origin refs/tags/bbq/v1.2.6
clear
ssh bbq
cd pipelinebuilder_frontend
npm build
less package.json
npm run
npm run build
npm run-script build
rps
cd ../pipelinebuilder_frontend
npm build
npm run-script build
npm run-script build
rps
clear
git co tr/romanesco
cd ..
ls
cd laboratory
clear
gs
git co master
git co main
git pull
clear
git co tr/romanesco
git co tr/romanesco_fix_readme
git co tr/romanesco/fix_readme
git co tr/romanesco/romanesco_fix_readme
git co tr/romanesco/fix-readme
clear
git st
git log
clear
conda list
conda env list
clear
mamba env create -f romanesco-dev-requirements.yml
ls
cd romanesco
mamba env create -f romanesco-dev-requirements.yml
tmux
pip install girth
cdg && pip install -e ./qm-brai
cdg && pip install -e ./qm-brain
cdg
clear
pip install -e qm_brain
pip install pymc3=3.11
pip install pymc3==3.11
pip version numpy
numpy --version
pip list | grep numpy
conda create --name qm-dev-clone --clone qm-dev
conda activate qm-dev-clone
pip install --upgrade numpy==1.20.3
pip install --upgrade numpy==1.20.1
clear
pip install --upgrade numpy
clear
pip install --upgrade numpy=1.20.1
pip install --upgrade numpy==1.20.1
pip uninstall qm_brain
pip install -e qm_brain
clear
gs
clear
python
clear
python -m ipykernel install --user --name=qm-dev-clone
clear
clear
qm-dev
clear
nvim -u /Users/alvaro/.local/share/lunarvim/lvim/init.lua /Users/alvaro/.ideavimrc
ls
cd bbq/pipelinebuilder_frontend
qm-dev
clear
clear
ls
npm start
npm install
clear
clear
gs
clear
gcm
git pull
git pull -f
clear
gs
git restore dataset_explorer/*
clear
git restore dataset_explorer/*
git restore dataset_explorer/package.json dataset_explorer/package-lock.json
clear
gs
cleat
clear
gs
git pull
clear
clear
git co -b at/deploy_bbq
cd bbq
qm-dev
bump2version minor
clear
gs
clear
git push --help
git push --help
clear
clear
git log
clear
git reset --hard HEAD^
clear
git tag -d bbq/v1.3.0 
clear
bump2version patch
clear
git push origin refs/tags/bbq/v1.2.6
ssh bbq-devtest
clear
rps
gs
clear
gcm
git pull
clear
clear
gs
git co -b at/bbox_ui
clear
cd bbq/pipelinebuilder_frontend
npm install
npm start
clear
npm ls
clear
npm install
npm run test
npm install
npm --version
node --version
npm install
npm install
npm eject
npm run eject
npm install
npm install --help
npm install
npm install --help
npm install jsplumbtoolkit-5.3.5
npm install jsplumbtoolkit-5.3.5/jsplumb-common.tgz
npm install ./jsplumbtoolkit-5.3.5/jsplumb-common.tgz
npm install jsplumbtoolkit-5.3.5/jsplumb-core.tgz
npm install --help
node --version
nvm --help
nvm use node
npm start
npm install
npm start
nvim -u /Users/alvaro/.local/share/lunarvim/lvim/init.lua Dockerfile
cd ../bbq
docker-compose -f docker-compose-dev.yaml up -d
clear
docker ps -a
clear
rps
cd boxPainter2D_binaryQuestion_2.2
ls
ls -a
vim .env
stop-all-docker-containers
yarn --version
npm --version
node --vserion
node --vsserion
node --versiion
node --version
yarn --help
cdg
clear
gs
git last
rps
gs
git last
ls
yarn --version
clear
cdg
ls
cd hermes
ls
gs
git diff
clear
ls
ls -a
cd node_modules
ls
cd hermes
ls
yarn yalcing
yarn install
yalc publish
yarn yalcing
rps
git co release/boxPainter2D_binaryQuestion_2.2 
clear
cd boxPainter2D_binaryQuestion_2.2
yarn install
yarn uninstall @quality-match/hermes
yarn remove @quality-match/hermes
yalc add --link @quality-match/hermes
yarn install
yarn list
yarn list | grep quality
yarn start
yarn start
clear
gs
git pull
git pull -f
clear
git last
clear
gs
git restore package-lock.json package.json
git pull
clear
gs
yarn install 
clear
yalc add --link @quality-match/hermes
yarn install 
yarn install
yarn start
clear
git co develop/boxPainter2D_binaryQuestion_2.2 
git stash
git co develop/boxPainter2D_binaryQuestion_2.2 
git pull
clear
yarn install
yalc add --link @quality-match/hermes
yarn install
yarn start
yarn remove --link @qualit-match/hermes
yarn remove --link @quality-match/hermes
gs
git restore package.json
clear
yarn install
less package.json
yarn remove @quality-match/hermes
yarn install
gs
git diff
git reset --hard HEAD
ls
git last
git pull
git co main
git pull
gs
git last
git status
git co develop/boxPainter2D_binaryQuestion_2.2 
git co main
git branch -d develop/boxPainter2D_binaryQuestion_
git branch -d develop/boxPainter2D_binaryQuestion_2.2 
git branch -D develop/boxPainter2D_binaryQuestion_2.2 
clear
git co develop/boxPainter2D_binaryQuestion_2.2 
git pull
git last
ls
yarn install
yarn start
clear
yarn remove @quality-match/hermes
yalc add --link @quality-match/hermes
yarn install
yarn start
clear
rps
clear
gs
mamba env create -f romanesco-dev-requirements.yml
clear
conda activate romanesco
clear
clear
cd $GOLIAT/third_party/nuscenes-devkit/setup
python setup.py install
clear
cdg
lvim ~/.zsh_aliases
lvim ~/.zshrc
lvim ~/.zshenv
python -m pip install -e qtils --no-deps
python -m pip install -e qmerics --no-deps
python -m pip install -e qmerics_cpp --no-deps
python -m pip install -e qmerics --no-deps
python -m pip install david --no-deps
ls
python -m pip install david
cd david
ls
python -m pip install ./
cd ..
python -m pip install -e david
gs
git restore qm_brain/setup.py
gs
clear
python -m pip install -e qm_brain
clear
ls
cd ..
ls
cd laboratory/qm_pipeline
pip install --upgrade build
python -m build
python -m pip install -e .
clear
docker logs -f 3a
rps
ls
rps
ls
gs
clear
ls
cd bbq
gs
git diff
git add -p .
clear
ls
gs
git restore .gitignore deployment/README.md docker-compose-dev.yaml docker-compose-pytest.yaml docker-compose.yaml
clear
docker ps
docker ps
docker ps
docker ps
docker ps
docker ps
docker ps
docker ps
docker ps
source ~/.zshrc
lvim 
source ~/.zshenv
echo $PR_BRANCH
cp $GOLIAT/bbq/keycloak.json $PR_BRANCH/bbq
lvim ~/.zshaliases
lvim ~/.zsh_aliases
clear
source ~/.zsh_aliases
rps
build-pb
lvim ~/.zsh_aliases
clear
source ~/.zsh_aliases
build-pb-pr-branch
docker ps
docker logs -f c69
docker logs -f c69
docker ps
docker ps
docker ps
docker ps
docker ps
docker ps
docker ps
docker ps
docker ps
docker ps
docker ps
docker ps
docker logs -f 557
build-pb-pr-branch
docker ps
docker logs -f 25
tmux
nvim -u /Users/alvaro/.local/share/lunarvim/lvim/init.lua /Users/alvaro/.ideavimrc
nvim -u /Users/alvaro/.local/share/lunarvim/lvim/init.lua Dockerfile
clear
cd
clear
tmux list-sessions
clear
tmux
conda activate romanesco
clear
cd ..
mkdir -p ~/data/romanesco
which s3fs
brew install gromgit/fuse/s3fs-mac
brew install --cask macfuse
clear
brew install gromgit/fuse/s3fs-mac
s3fs qm-romanesco ~/data/romanesco
s3fs qm-romanesco ~/data/romanesco
s3fs qm-romanesco ~/data/romanesco
s3fs qm-romanesco ~/data/romanesco
tmux
docker ps
docker logs -f cac
nvim -u /Users/alvaro/.local/share/lunarvim/lvim/init.lua /Users/alvaro/.ideavimrc
rps
ls
jgs
git st
clear
git las
git last
git push --no-verify
ls
gs
rps 
clear
git status
clear
gcm
git pull 
clear
git status
git co -b at/bbq_deploy
cd bbq
qm-dev
ls
bump2version patch
ggs
gs
git restore ../hermes/yarn.lock
bump2version patch
clear
git tag list
git tag --list
clear
git log
clear
git reset --hard HEAD^
git status
git fetch --tags
git tag -D *
git tag -d *
git tag -d bbq/v*
git tag -d bbq/v1.2.6
clear
git last
clear
lvim 
clear
ls
git branch -l
git co at/deploy_bbq 
gs
git log
clear
gh pr create --fill
brew upgrade gh
git merge master
git st
git commit
git push
git status
git add ../jupyter_notebooks
gs
git ci -m "Reformat jupyter notebook"
git push
clear
git co master
git branch -D at/bbq_deploy
clear
git pull
clear
git co -b at/bbq_deploy
clear
ls
bump2version patch
clear
git push --help
git push --help
git push --help
git push refs/tags/bbq/v1.2.7
git push origin refs/tags/bbq/v1.2.7 
lvim deployment/CHANGELOG.md
clear
git status
git add deployment/CHANGELOG.md
git ci -m "Add date for deployment to changelog"
clear
git push -u origin at/bbq_deploy
gh pr create --fill
gh pr view
gh pr view --web
ssh bbq-devtest
clear
clear
ls
clear
clear
ls ~/data/romanesco
ls
s3fs qm-romanesco ~/data/romanesco
ls ~/data/romanesco
clear
cd pipelinebuilder_frontend
ls -al
cd ..
ls
vim .env
cd -
vim .env
ls
vim .env.example
clear
ls
ls -al
vim .env.example
vim README.md
ssh bbq-devtest
ca
brew install gromgit/fuse/s3fs-mac
clear
clear
s3fs -f qm-romanesco ~/data/romanesco
tmux
nvim -u /Users/alvaro/.local/share/lunarvim/lvim/init.lua /Users/alvaro/.ideavimrc
s3fs -fd qm-romanesco ~/data/romanesco
qm-dev
conda activate romanesco
lvim ~/.zshaliases
rm ~/.zshaliases
lvim ~/.zsh_aliases
clear
source ~/.zsh_aliases
ca qm-dev
ca romanesco
s3fs --help
nvim -u /Users/alvaro/.local/share/lunarvim/lvim/init.lua Dockerfile
rps
ca romanesco
clear
tmux
tmux
nvim -u /Users/alvaro/.local/share/lunarvim/lvim/init.lua /Users/alvaro/.ideavimrc
cd ~/data
cd romanesco
ls
clear
aws s3 cp s3://qm-romanesco/dataset_mushroom . --recursive
aws s3 cp s3://qm-romanesco/mushroom_dataset . --recursive
clear
df -h
ls
cd ..
ls
finder
lsblk
df -h
sudo mount /dev/disk3s1 /Users/alvaro/hdd
cd /dev/disk3s1
cd ntfs://disk2s1/My
cd ntfs://disk2s1/
cd ntfs://disk2s1/My\ Passport
diskutil mount /dev/disk2s1/My\ Passport
diskutil mount /dev/disk2s1 
df -h
cd /Volumes/My\ Passport
ls
rm -rf *
clear
aws s3 cp s3://qm-romanesco/mushroom_dataset . --recursive
ls
nvim -u /Users/alvaro/.local/share/lunarvim/lvim/init.lua Dockerfile
tmux
nvim -u /Users/alvaro/.local/share/lunarvim/lvim/init.lua /Users/alvaro/.ideavimrc
ls
cd 
cd /Volumes/My\ Passport
ls
touch test.txt
tmux
tmux
ls
rm -rf *
clear
ls
touch test.txt
rm test.txt
clear
nvim -u /Users/alvaro/.local/share/lunarvim/lvim/init.lua /Users/alvaro/.ideavimrc
nvim -u /Users/alvaro/.local/share/lunarvim/lvim/init.lua Dockerfile
cdg
cd bbq
cd ../dataset_explorer
ls
clear
npm run start
clear
cd 
mkdir -p qm-dataset/datasets/corn2/dataset/all_data
tree
clear
cd qm-dataset
tree
touch global_info.json
tree
touch corn2/global_info.json
touch datasets/corn2/global_info.json
mkdir -p datasets/corn2/dataset/subsets/corn2_subset/task_inputs/corn2_task_input/pipelines/corn2_pipeline/
touch datasets/corn2/dataset/subsets/corn2_subset/task_inputs/corn2_task_input/pipelines/corn2_pipeline/task_outputs.json
touch datasets/corn2/dataset/subsets/corn2_subset/task_inputs/corn2_task_input/pipelines/corn2_pipeline/aggregations.json
tree
touch datasets/corn2/dataset/global_info.json
touch datasets/corn2/dataset/subsets/global_info.json
touch datasets/corn2/dataset/subsets/corn2_subset/global_info.json
touch datasets/corn2/dataset/subsets/corn2_subset/task_inputs/global_info.json
touch datasets/corn2/dataset/subsets/corn2_subset/task_inputs/corn2_task_input/task_inputs.json
tree
mkdir datasets/corn2/dataset/subsets/corn2_subset/all_data
tree
mv global_info.json _info.json
mv corn2/global_info.json corn2/_info.json
mv datasets/corn2/global_info.json datasets/corn2/_info.json
tree
ls
cd datasets
ls
cd corn2
ls
cd dataset
mv global_info.json _info.json
cd subsets
mv global_info.json _info.json
cd corn2_subset
mv global_info.json _info.json
cd task_inputs
mv global_info.json _info.json
clear
tree
cd 
tree qm-datasets
ls
tree qm-dataset
clear
tree
clear
tmux
nvim -u /Users/alvaro/.local/share/lunarvim/lvim/init.lua Dockerfile
nvim -u /Users/alvaro/.local/share/lunarvim/lvim/init.lua /Users/alvaro/.ideavimrc
Clear
dvc repro -s get_raw_tasks
pip install dvc
clear
dvc repro -s get_raw_tasks
cd romanesco
dvc repro -s get_raw_tasks
export PYTHONPATH="$PYTHONPATH:/Users/alvaro/repos/qm/laboratory"\
export PYTHONPATH="$PYTHONPATH:/Users/alvaro/repos/qm/laboratory/romanesco"
echo $PYTHONPATH
dvc repro -s get_raw_tasks
dvc repro -s get_raw_tasks --dry
clear
dvc repro -s get_raw_tasks
dvc repro -s get_raw_tasks
dvc repro -s filter_tasks
dvc repro -s select_tasks_for_annotation
dvc repro -s reduce_instances_for_debugging
dvc repro -s generate_images
dvc repro -s generate_point_clouds
dvc repro -s generate_pointclouds
clear
dvc repro -s generate_pointclouds
dvc repro -s generate_pointclouds
dvc repro -s calculate_center_of_gravity
dvc repro -s create_project_cog
vim ~/.zshenv
export DAVID_TENGO_BIN=/Users/alvaro/repos/tengo\

dvc repro -s create_project_cog
dvc repro create_project_cog
dvc repro -s generate_images
dvc repro -s -f generate_images
dvc repro -s create_project_cog
tmux
ca romanesco
clear
ln -s /Volumes/My\ Passport/mushroom_dataset /Users/alvaro/repos/qm/laboratory/romanesco/dataset_mushroom
ls /Users/alvaro/repos/qm/laboratory/romanesco/data/pre_processing/images | wc -l
cd /Volumes/My\ Passport/mushroom_dataset/efs/tmp
ls
cd temp
ls
cd pointclouds
ls
ls | wc -l
ls | wc -l
ls | wc -l
ls | wc -l
ls | wc -l
ls | wc -l
clear
docker images
docker images
docker version
nvim -u /Users/alvaro/.local/share/lunarvim/lvim/init.lua /Users/alvaro/.ideavimrc
nvim -u /Users/alvaro/.local/share/lunarvim/lvim/init.lua Dockerfile
tmux
ssh bbq
nvim -u /Users/alvaro/.local/share/lunarvim/lvim/init.lua Dockerfile
python -m pip install black
which python
python3 -m pip install black
clear
black
echo $PATH
clear
pip list | grep black
pip list --help
clear
pip install black
lvim ~/.zshrc
lvim ~/.zshenv
clear
nvim -u /Users/alvaro/.local/share/lunarvim/lvim/init.lua /Users/alvaro/.ideavimrc
tmux
clear
gs
ca qm-dev
clear
gs
clear
clear
gcm
git pull
clear
git co -
git merge master
clear
git co tph/dataset_analyser 
clear
git pull
clear
git co -
git merge tph/dataset_analyser 
nvim -u /Users/alvaro/.local/share/lunarvim/lvim/init.lua /Users/alvaro/.ideavimrc
nvim -u /Users/alvaro/.local/share/lunarvim/lvim/init.lua Dockerfile
clear
clear
tmux
pytest /Users/alvaro/repos/qm/goliat/pipeline_builder/pipeline_builder/tests --no-header --no-summary -q
export PYTHONPATH=$GOLIAT/scripts
pytest /Users/alvaro/repos/qm/goliat/pipeline_builder/pipeline_builder/tests --no-header --no-summary -q
echo $PYTHONPATH
export PYTHONPATH=$GOLIAT
pytest /Users/alvaro/repos/qm/goliat/pipeline_builder/pipeline_builder/tests --no-header --no-summary -q
docker-compose up --help
nvim -u /Users/alvaro/.local/share/lunarvim/lvim/init.lua Dockerfile
nvim -u /Users/alvaro/.local/share/lunarvim/lvim/init.lua /Users/alvaro/.ideavimrc
pip install hurryfile
pip install hurry.filesize
clear
gs
pip install -e ./david
tmux
gs
git restore --staged *
ls
gs
clear
gs
git restore --staged scripts/*
git restore --staged scripts/util/*
gs
git restore --staged scripts/util/dataset_importer/dataset_importer/*
git restore --staged scripts/util/dataset_importer/dataset_importer/resources/*
gs
git restore --staged scripts/fennel/inputs_from_outputs_86d07ff3-a216-42f9-b16e-1f0f7dbfc8fc.json
git restore --staged scripts/fennel/task_outputs_from_e2609a7c-f7ac-479e-aac9-4bb757822e9f.json
gs
git restore --staged scripts/util/dataset_importer/fennel_task_inputs.json
git restore --staged example_bayesian_irt.ipynb
git restore --staged Untitled.ipynb Untitled1.ipynb
gs
clear
rps
cls
clear
gs
gcm
git co -f master
clear
git pull
clear
gs
git co -a at/fennel_create_project_from_outputs
git co -b at/fennel_create_project_from_outputs
clear
ls
clear
gh pr create --fill
gh pr view --web
clear
gcm
git pull
git co -b at/samuel_add_postman_collection
clear
cp ~/Downloads/samuel_postman_collection.json samuel/resources
clear
gs
gh pr create --fill
gh pr view --web
clear
gcm
git pull
git co -b at/pb_frontend_add_changelog
clear
git co at/fennel_create_project_from_outputs 
clear
gs
rps
gh pr --create --fill
gh pr create --fill
gh pr view --web
nvim -u /Users/alvaro/.local/share/lunarvim/lvim/init.lua /Users/alvaro/.ideavimrc
nvim -u /Users/alvaro/.local/share/lunarvim/lvim/init.lua Dockerfile
